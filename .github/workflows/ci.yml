name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup uv with caching
    - name: Install the latest version of uv and set the python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
        prune-cache: true

    - name: Install Hatch
      run: uv pip install hatch

    - name: Test with Python ${{ matrix.python-version }}
      env:
        HATCH_PYTHON: python${{ matrix.python-version }}
      run: hatch test

  publish:
    name: Publish to PyPI
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write  # Required for trusted publishing
      contents: write  # Required for creating releases
    environment:
      name: pypi
      url: https://pypi.org/p/xenopict       

    steps:
    - uses: actions/checkout@v4

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: "3.11"

    - name: Build
      run: uv build

    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes ""
        gh release upload "$GITHUB_REF_NAME" dist/** --repo "$GITHUB_REPOSITORY"